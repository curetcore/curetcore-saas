version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: curetcore-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.curetcore.com
      - NEXT_PUBLIC_APP_NAME=CuretCore
      - NEXT_PUBLIC_APP_VERSION=2.0.0
      - NEXT_PUBLIC_COMPANY_NAME=Curetshop
      - NEXT_PUBLIC_REFRESH_INTERVAL=300000
    depends_on:
      - backend
    networks:
      - curetcore-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: curetcore-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:Pitagora@@147.93.177.156:5432/warehouse?sslmode=disable
      - DATABASE_SSL=false
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGIN=https://core.curetcore.com
      - RATE_LIMIT_WINDOW=15m
      - RATE_LIMIT_MAX=100
    depends_on:
      - redis
    networks:
      - curetcore-network

  redis:
    image: redis:7-alpine
    container_name: curetcore-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - curetcore-network

  nginx:
    image: nginx:alpine
    container_name: curetcore-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - curetcore-network

networks:
  curetcore-network:
    driver: bridge

volumes:
  redis_data: